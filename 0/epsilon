/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      epsilon;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "include/initialConditions"

dimensions      [0 2 -3 0 0 0 0];

internalField   uniform $turbulentEpsilon;

boundaryField
{

    inlet
    {
        type            atmBoundaryLayerParanteInletEpsilon;
        #include        "include/ABLConditions"
        z0              uniform $z0;
    }

    outlet
    {
        type            inletOutlet;
        inletValue      uniform $turbulentEpsilon;
        value           $internalField;
    }

    ground
    {
        // // type            epsilonWallFunction;
        // // #include        "include/ABLConditions"
        // // E               9.8;
        // // value           $internalField;
         
        type            atmEpsilonWallFunction;
        #include        "include/ABLConditions"
        value           $internalField;
        z0              uniform $z0;

    }

    building
    {
        type            epsilonWallFunction;
        Cmu             0.09;
        kappa           0.4;
        E               9.8;
        value           $internalField;
    }

    surroundings
    {
        type            epsilonWallFunction;
        Cmu             0.09;
        kappa           0.4;
        E               9.8;
        value           $internalField;
    }

    #include "include/sideAndTopPatches"

    top
    {
        type fixedValue;

        #include        "include/ABLConditions"
        #include        "../system/blockMeshDict"

        topEps #calc    "(pow($ustar,3) / ($kappa * ($zMax+$z0)))";
       
        value uniform $topEps;
    }

}


// ************************************************************************* //
