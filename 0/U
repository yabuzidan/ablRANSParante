/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#include        "include/initialConditions"

dimensions      [0 1 -1 0 0 0 0];

internalField   uniform $flowVelocity;

boundaryField
{

    inlet
    {
        type            atmBoundaryLayerParanteInletVelocity;
        #include        "include/ABLConditions"
        z0              uniform $z0;
    }

    outlet 
    {
        type            inletOutlet;
        inletValue      uniform (0 0 0);
        value           $internalField;

        // // inletOutlet is implemented. Option to account for directionality
        // type            atmBoundaryLayerInletVelocity;
        // #include        "include/ABLConditions"
        // z0              uniform $z0;
    }
    
    ground      
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }

    building      
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }
    surroundings      
    {
        type            fixedValue;
        value           uniform (0 0 0);
    }

    #include "include/sideAndTopPatches"

    top
    {
        //  Calculate horizontal shear stress to apply at top boundary
        // (Hargreaves & Wright, 2007: p. 358)
        // Note: rho (denisty) = 1 in OF
        
        type fixedShearStress;

        #include        "include/ABLConditions"
        #include        "../system/blockMeshDict"

        tau_x #calc     "pow($ustar,2)";
       
        tau ($tau_x 0 0);
        value uniform (0 0 0);
    }

}

// ************************************************************************* //
